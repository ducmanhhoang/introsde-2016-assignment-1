**Assignment 01: Reading/Writing objects to and from XML and JSON**

**Introduction to Service Design and Engineering | University of Trento**

**Name:** Duc Manh Hoang

**Student ID:** MAT.180387



**Description:** This project contains the codes written to satisfy tasks reported in Assignment01.



**Codes:**

1. **src/Assignment01:** This package contains the class write people.xml file with including information of more 20 people.

2. **src/Assignment02/lab03:** This package contains the classes solving the requirements based on Lab 03.

3. **src/Assignment02/lab04:** This package contains the classes solving the requirements based on Lab 04

4. **src/dao:** This package contains the PeopleStore class storing a database as array list of Person object.

5. **src/model:** This package contains the classes presenting Person and HealthProfile objects.

6. **src/people/generated:** This package contains the classes generated by using JAXB XJC on XML schema people.xsd file for people.xml.

7. **src/utils:** This package contains the classes to suport getting date time and manipulate on date time format.

8. **Others:** In this base directory of this project contains xml, json and xsd files. These files are configuations of the dependence package of project (ivy.xml), configuation of the runing the project on Ant (build.xml), containing the schema of the people.xml file (people.xsd), and data generated from the project (people.xml, people.json, people01.xml).



**Tasks:**

0. src/Assignment01/GenerateDatabase.java: Generate database as people.xml file.

* **Based on Lab 3**

1. src/Assignment02/lab03/Requirement01.java: Use xpath to implement methods like getWeight and getHeight (getWeight(personID) returns weight of a given person, the same for getHeight)

2. src/Assignment02/lab03/Requirement02.java: Make a function that prints all people in the list with detail

3. src/Assignment02/lab03/Requirement03.java: A function that accepts id as parameter and prints the HealthProfile of the person with that id

4. src/Assignment02/lab03/Requirement04.java: A function which accepts a weight and an operator (=, > , <) as parameters and prints people that fulfill that condition (i.e., >80Kg, =75Kg, etc.).

* **Based on Lab 4**

1. people.xsd is the XML schema XSD file for the people.xml document of people.

2. src/Assignment02/lab04/Requirement02.java: Write a java application that does the marshalling and un-marshalling using classes generated with JAXB XJC.

3. src/Assignment02/lab04/Requirement03.java: Make your java application to convert also JSON.



**How to run:**

Running the project requires Java and Ant.

Ant source file build.xml is annotated.

* **Main targets are:**

* **execute.evaluation:** Executing all above tasks as the following order:

0. Compiles the codes and runs **src/Assignment01/GenerateDatabase.java** to generates people.xml database.

1. Runs src/Assignment02/lab03/Requirement02.java based on Lab 3

2. Runs src/Assignment02/lab03/Requirement03.java based on Lab 3 with id = 5

3. Runs src/Assignment02/lab03/Requirement04.java based on Lab 3 with weight > 90

4. Runs src/Assignment02/lab04/Requirement02.java based on Lab 4 (marshaling to XML - create 3 persons using java and marshal them to XML) - print the content and save to people01.xml file

5. Runs src/Assignment02/lab04/Requirement02.java based on Lab 4 (un-marshaling from XML)

6. Runs src/Assignment02/lab04/Requirement03.java based on Lab 4 (marshaling to JSON - create 3 persons using java and marshal them to JSON) - print the content and save to people.json file

* **Generated files:** Produce people.xml, people01.xml, people.json.



**References:**

1. https://sites.google.com/a/unitn.it/introsde_2016-17/home/lessons

2. https://sites.google.com/a/unitn.it/introsde_2016-17/lab-sessions

3. https://sites.google.com/a/unitn.it/introsde_2016-17/lab-sessions/assignments/assignment-1
